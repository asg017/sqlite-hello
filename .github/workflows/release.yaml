name: "Release"
on:
  release:
    types: [published]
permissions:
  contents: read
jobs:
  build-linux-x86_64-extension:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - run: make loadable static
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-hello-linux-x86_64-extension
          path: dist/*
  build-macos-x86_64-extension:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - run: make loadable static
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-hello-macos-x86_64-extension
          path: dist/*
  build-macos-aarch64-extension:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - run: make loadable static CFLAGS="-target arm64-apple-macos11"
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-hello-macos-aarch64-extension
          path: dist/*
  build-windows-x86_64-extension:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v3
      - run: make loadable static
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-hello-windows-x86_64-extension
          path: dist/*
  upload-extensions:
    needs:
      [
        build-linux-x86_64-extension,
        build-macos-x86_64-extension,
        build-macos-aarch64-extension,
        build-windows-x86_64-extension,
      ]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: asg017/upload-spm@main
        id: upload-spm-loadable
        with:
          name: sqlite-hello
          github-token: ${{ secrets.GITHUB_TOKEN }}
          platforms: |
            macos-x86_64:   sqlite-hello-macos-x86_64-extension/*.dylib
            macos-aarch64:  sqlite-hello-macos-aarch64-extension/*.dylib
            linux-x86_64:   sqlite-hello-linux-x86_64-extension/*.so
            windows-x86_64: sqlite-hello-windows-x86_64-extension/*.dll
      - uses: asg017/upload-spm@main
        id: upload-spm-static
        with:
          name: sqlite-hello
          github-token: ${{ secrets.GITHUB_TOKEN }}
          asset-name-template: "$PROJECT-$VERSION-static-$OS-$CPU"
          skip-spm: true
          platforms: |
            macos-x86_64:   sqlite-hello-macos-x86_64-extension/*.a
            macos-aarch64:  sqlite-hello-macos-aarch64-extension/*.a
            linux-x86_64:   sqlite-hello-linux-x86_64-extension/*.a
            windows-x86_64: sqlite-hello-windows-x86_64-extension/*.a
      - run: echo "${{ steps.upload-spm-loadable.outputs.asset-checksums }}" "${{ steps.upload-spm-static.outputs.asset-checksums }}"
  upload-gem:
    needs:
      [
        build-linux-x86_64-extension,
        build-macos-x86_64-extension,
        build-macos-aarch64-extension,
        build-windows-x86_64-extension,
      ]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
      - run: |
          rm bindings/ruby/lib/*.{dylib,so,dll} || true
          cp sqlite-hello-macos-x86_64-extension/*.dylib bindings/ruby/lib
          gem build \
            --platform x86_64-darwin \
            -o x86_64-darwin.gem \
            bindings/ruby/sqlite_hello.gemspec
      - run: |
          rm bindings/ruby/lib/*.{dylib,so,dll} || true
          cp sqlite-hello-macos-aarch64-extension/*.dylib bindings/ruby/lib
          gem build \
            --platform arm64-darwin \
            -o arm64-darwin.gem \
            bindings/ruby/sqlite_hello.gemspec
      - run: |
          rm bindings/ruby/lib/*.{dylib,so,dll} || true
          cp sqlite-hello-linux-x86_64-extension/*.so bindings/ruby/lib
          gem build \
            --platform x86_64-linux \
            -o x86_64-linux.gem \
            bindings/ruby/sqlite_hello.gemspec
      - run: |
          rm bindings/ruby/lib/*.{dylib,so,dll} || true
          cp sqlite-hello-windows-x86_64-extension/*.dll bindings/ruby/lib
          gem build \
            --platform x64-mingw32 \
            -o x64-mingw32.gem \
            bindings/ruby/sqlite_hello.gemspec
      - run: |
          gem push x86_64-darwin.gem
          gem push arm64-darwin.gem
          gem push x86_64-linux.gem
          gem push x64-mingw32.gem
        env:
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}
